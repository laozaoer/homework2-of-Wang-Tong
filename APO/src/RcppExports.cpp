// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// shedmat1
arma::mat shedmat1(arma::mat a, double p);
RcppExport SEXP _APO_shedmat1(SEXP aSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(shedmat1(a, p));
    return rcpp_result_gen;
END_RCPP
}
// APO2
arma::mat APO2(arma::mat X, double lambda, double p, double c, double beta);
RcppExport SEXP _APO_APO2(SEXP XSEXP, SEXP lambdaSEXP, SEXP pSEXP, SEXP cSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(APO2(X, lambda, p, c, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_APO_shedmat1", (DL_FUNC) &_APO_shedmat1, 2},
    {"_APO_APO2", (DL_FUNC) &_APO_APO2, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_APO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
